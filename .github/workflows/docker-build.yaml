name: Build, Push, Cleanup, and Deploy Docker Image for model.py

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      build_context:
        description: "Docker build context"
        default: "."
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3
      #get github secrets and put in .env file
      - name: Set up Environment Variables
        run: |
          echo "REDDIT_CLIENT_ID=${{ secrets.REDDIT_CLIENT_ID }}" >> .env
          echo "REDDIT_CLIENT_SECRET=${{ secrets.REDDIT_CLIENT_SECRET }}" >> .env
      - name: Get data
        run: |
          pip install dvc
          pip install dvc-gs
          dvc pull --no-run-cache --force --verbose

      # Step 2: Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # Step 3: Configure Docker for Google Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker europe-west4-docker.pkg.dev      
      # Step 5: Build and push the Docker image
      - name: Build and Push Model Image
        run: |
          docker build -f dockerfiles/api.dockerfile -t europe-west4-docker.pkg.dev/mlops-448109/mlops-artifact-registry/reddit_forecast_model:latest .
          docker push europe-west4-docker.pkg.dev/mlops-448109/mlops-artifact-registry/reddit_forecast_model:latest
     # Step 4: Cleanup ALL untagged images from Artifact Registry
      - name: Cleanup Untagged Images
        run: |
          echo "Fetching untagged images..."
          gcloud artifacts docker images list \
              europe-west4-docker.pkg.dev/mlops-448109/mlops-artifact-registry \
              --format="json" | jq -r '.[] | select(.tags == "") | .metadata.name' | while read -r image; do

              # Extract the repository and digest
              CLEANED_IMAGE=$(echo "$image" | sed 's|projects/mlops-448109/locations/europe-west4/repositories/mlops-artifact-registry/dockerImages/|europe-west4-docker.pkg.dev/mlops-448109/mlops-artifact-registry/|')

              echo "Deleting untagged image: $CLEANED_IMAGE"

              # Delete the untagged image without affecting other tags
              gcloud artifacts docker images delete "$CLEANED_IMAGE" --quiet
          done
# Step 6: Deploy to Cloud Run with 4GB memory allocation
      - name: Deploy to Cloud Run
        run: |
          # Grant public access to the service (unauthenticated access)
          gcloud beta run services add-iam-policy-binding reddit-forecast-model \
            --region=europe-west4 \
            --member=allUsers \
            --role=roles/run.invoker

          # Deploy the service to Cloud Run
          gcloud run deploy reddit-forecast-model \
            --image europe-west4-docker.pkg.dev/mlops-448109/mlops-artifact-registry/reddit_forecast_model:latest \
            --platform managed \
            --region europe-west4 \
            --port 8000 \
            --memory 4Gi \
            --allow-unauthenticated

